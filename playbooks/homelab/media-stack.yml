---
- name: Deploy Media Stack (Plex, Radarr, Sonarr, qBittorrent, Overseerr, Prowlarr)
  hosts: k3s_server
  become: yes
  gather_facts: no
  tasks:
    - name: Deploy Media Namespace and Plex
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/homelab/media/plex.yaml') | from_yaml_all | list }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml

    - name: Deploy Radarr
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/homelab/media/radarr.yaml') | from_yaml_all | list }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml

    - name: Deploy Sonarr
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/homelab/media/sonarr.yaml') | from_yaml_all | list }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml

    - name: Deploy qBittorrent with VPN
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/homelab/media/qbittorrent-vpn.yaml') | from_yaml_all | list }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml

    - name: Deploy Overseerr
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/homelab/media/overseerr.yaml') | from_yaml_all | list }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml

    - name: Deploy Prowlarr
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/homelab/media/prowlarr.yaml') | from_yaml_all | list }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml

    - name: Wait for media deployments to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: "{{ item }}"
        namespace: media
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        wait: true
        wait_condition:
          type: Available
          status: "True"
        wait_timeout: 600
      loop:
        - plex
        - radarr
        - sonarr
        - qbittorrent-vpn
        - overseerr
        - prowlarr

    - name: Get media services LoadBalancer IPs
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        namespace: media
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: media_services

    - name: Display media stack access information
      debug:
        msg: |
          üé¨ MEDIA STACK DEPLOYED SUCCESSFULLY!
          ====================================
          
          üìù Services Available:
          {% for svc in media_services.resources %}
          {% if svc.spec.type == "LoadBalancer" and svc.status.loadBalancer.ingress is defined %}
          üîó {{ svc.metadata.name | title }}: http://{{ svc.status.loadBalancer.ingress[0].ip }}{% if svc.spec.ports[0].port != 80 %}:{{ svc.spec.ports[0].port }}{% endif %}
            üåê Web: https://{{ svc.metadata.name }}.home.lab
          {% endif %}
          {% endfor %}
          
          üìã SETUP INSTRUCTIONS:
          ======================
          
          1. üì∫ PLEX (Media Server):
             ‚Ä¢ Access: https://plex.home.lab
             ‚Ä¢ Add your Plex claim token in the deployment
             ‚Ä¢ Configure media libraries pointing to /media
          
          2. üé¨ RADARR (Movies):
             ‚Ä¢ Access: https://radarr.home.lab  
             ‚Ä¢ Add download client: qBittorrent (qbittorrent:8080)
             ‚Ä¢ Add indexers via Prowlarr integration
             ‚Ä¢ Set movie folder: /media/movies
          
          3. üì∫ SONARR (TV Shows):
             ‚Ä¢ Access: https://sonarr.home.lab
             ‚Ä¢ Add download client: qBittorrent (qbittorrent:8080)
             ‚Ä¢ Add indexers via Prowlarr integration
             ‚Ä¢ Set TV folder: /media/tv
          
          4. üåê QBITTORRENT + VPN:
             ‚Ä¢ Access: https://qbittorrent.home.lab
             ‚Ä¢ ‚ö†Ô∏è  IMPORTANT: Configure Mullvad credentials in secret!
             ‚Ä¢ Default login: admin / (check container logs for password)
             ‚Ä¢ Set download path: /downloads
          
          5. üé≠ OVERSEERR (Request Management):
             ‚Ä¢ Access: https://overseerr.home.lab
             ‚Ä¢ Connect to Plex server for authentication
             ‚Ä¢ Connect Radarr and Sonarr for automated requests
          
          6. üîç PROWLARR (Indexer Manager):
             ‚Ä¢ Access: https://prowlarr.home.lab
             ‚Ä¢ Add your indexers (private trackers, public sites)
             ‚Ä¢ Sync to Radarr and Sonarr automatically
          
          ‚ö†Ô∏è  IMPORTANT CONFIGURATION:
          ‚Ä¢ Update Mullvad VPN credentials in media namespace secret
          ‚Ä¢ Configure Plex claim token for remote access
          ‚Ä¢ Set up /etc/hosts entries or DNS for *.home.lab domains
          
          üîß Quick Setup Commands:
            kubectl get pods -n media
            kubectl get pvc -n media
            kubectl logs -n media deployment/qbittorrent-vpn -c gluetun