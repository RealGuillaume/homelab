---
- name: Deploy Home Automation Stack (Home Assistant, Grocy)
  hosts: k3s_server
  become: yes
  gather_facts: no
  tasks:
    - name: Deploy Home Assistant
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../k8s/homelab/home-automation/home-assistant.yaml') | from_yaml_all | list }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml

    - name: Deploy Grocy
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../k8s/homelab/home-automation/grocy.yaml') | from_yaml_all | list }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml

    - name: Wait for home automation deployments to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: "{{ item }}"
        namespace: home-automation
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        wait: true
        wait_condition:
          type: Available
          status: "True"
        wait_timeout: 600
      loop:
        - home-assistant
        - grocy

    - name: Get home automation services LoadBalancer IPs
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        namespace: home-automation
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: automation_services

    - name: Display home automation stack access information
      debug:
        msg: |
          üè† HOME AUTOMATION STACK DEPLOYED!
          ==================================
          
          üì± Services Available:
          {% for svc in automation_services.resources %}
          {% if svc.spec.type == "LoadBalancer" and svc.status.loadBalancer.ingress is defined %}
          üîó {{ svc.metadata.name | title | replace('-', ' ') }}: http://{{ svc.status.loadBalancer.ingress[0].ip }}{% if svc.spec.ports[0].port != 80 %}:{{ svc.spec.ports[0].port }}{% endif %}
            üåê Web: https://{% if svc.metadata.name == 'home-assistant' %}hass{% else %}{{ svc.metadata.name }}{% endif %}.home.lab
          {% endif %}
          {% endfor %}
          
          üìã SETUP INSTRUCTIONS:
          ======================
          
          üè† HOME ASSISTANT:
          ‚Ä¢ Access: https://hass.home.lab or LoadBalancer IP:8123
          ‚Ä¢ Complete initial setup wizard
          ‚Ä¢ Create admin account
          ‚Ä¢ Connect smart home devices
          ‚Ä¢ Install HACS for additional integrations
          ‚Ä¢ Configure automations and scenes
          
          Features:
          ‚úÖ Device discovery on host network
          ‚úÖ Persistent configuration storage
          ‚úÖ SSL/TLS via cert-manager
          ‚úÖ WebSocket support for real-time updates
          
          üìä GROCY (ERP for Your Home):
          ‚Ä¢ Access: https://grocy.home.lab or LoadBalancer IP:9283
          ‚Ä¢ Default login: admin / admin (change immediately!)
          ‚Ä¢ Manage groceries, recipes, and household items
          ‚Ä¢ Track expiration dates and shopping lists
          ‚Ä¢ Inventory management for your home
          
          Features:
          ‚úÖ Grocery management with barcode scanning
          ‚úÖ Recipe database with meal planning
          ‚úÖ Stock management and shopping lists
          ‚úÖ Persistent data storage
          
          üîß Advanced Configuration:
          =========================
          
          Home Assistant Add-ons to consider:
          ‚Ä¢ ESPHome (for custom IoT devices)
          ‚Ä¢ Node-RED (visual automation)
          ‚Ä¢ Zigbee2MQTT (Zigbee device integration)
          ‚Ä¢ AdGuard Home (network-wide ad blocking)
          
          üîç Monitoring Commands:
            kubectl get pods -n home-automation
            kubectl logs -n home-automation deployment/home-assistant
            kubectl exec -n home-automation deployment/home-assistant -- cat /config/home-assistant.log