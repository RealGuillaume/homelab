---
- name: Deploy Nextcloud with MariaDB
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', '../../k8s/homelab/cloud-services/nextcloud.yaml') | from_yaml_all | list }}"
    kubeconfig: /etc/rancher/k3s/k3s.yaml

- name: Deploy Immich with PostgreSQL and Redis
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', '../../k8s/homelab/cloud-services/immich.yaml') | from_yaml_all | list }}"
    kubeconfig: /etc/rancher/k3s/k3s.yaml

- name: Deploy Mealie
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', '../../k8s/homelab/cloud-services/mealie.yaml') | from_yaml_all | list }}"
    kubeconfig: /etc/rancher/k3s/k3s.yaml

- name: Wait for database deployments to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: "{{ item }}"
    namespace: cloud-services
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 600
  loop:
    - nextcloud-db
    - immich-postgres
    - immich-redis

- name: Wait for application deployments to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: "{{ item }}"
    namespace: cloud-services
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 900  # Longer timeout for app initialization
  loop:
    - nextcloud
    - immich-server
    - mealie

- name: Get cloud services LoadBalancer IPs
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    namespace: cloud-services
    kubeconfig: /etc/rancher/k3s/k3s.yaml
  register: cloud_services

- name: Display cloud services stack access information
  debug:
    msg: |
      ‚òÅÔ∏è  CLOUD SERVICES STACK DEPLOYED!
      ===================================
      
      üåê Services Available:
      {% for svc in cloud_services.resources %}
      {% if svc.spec.type == "LoadBalancer" and svc.status.loadBalancer.ingress is defined %}
      üîó {{ svc.metadata.name | title | replace('-server', '') }}: http://{{ svc.status.loadBalancer.ingress[0].ip }}{% if svc.spec.ports[0].port != 80 %}:{{ svc.spec.ports[0].port }}{% endif %}
        üåê Web: https://{{ svc.metadata.name | replace('-server', '') }}.home.lab
      {% endif %}
      {% endfor %}
      
      üìã SETUP INSTRUCTIONS:
      ======================
      
      ‚òÅÔ∏è  NEXTCLOUD (Personal Cloud):
      ‚Ä¢ Access: https://nextcloud.home.lab
      ‚Ä¢ Login: admin / adminpassword123
      ‚Ä¢ Complete setup wizard if prompted
      ‚Ä¢ Install recommended apps (Calendar, Contacts, Talk)
      ‚Ä¢ Configure external storage if needed
      ‚Ä¢ Enable two-factor authentication
      
      Features:
      ‚úÖ File sync and sharing
      ‚úÖ Calendar and contacts
      ‚úÖ Office suite integration
      ‚úÖ Video calls and chat
      ‚úÖ Collaborative editing
      
      üì∏ IMMICH (Photo Backup - Google Photos Alternative):
      ‚Ä¢ Access: https://immich.home.lab
      ‚Ä¢ Create admin account on first visit
      ‚Ä¢ Download mobile app for automatic photo backup
      ‚Ä¢ Configure facial recognition and object detection
      ‚Ä¢ Set up sharing albums with family/friends
      
      Features:
      ‚úÖ Automatic photo/video backup from mobile
      ‚úÖ AI-powered search and recognition
      ‚úÖ Timeline view like Google Photos
      ‚úÖ Face detection and clustering
      ‚úÖ Shared albums and collaboration
      
      üç≥ MEALIE (Recipe Manager & Meal Planner):
      ‚Ä¢ Access: https://mealie.home.lab
      ‚Ä¢ Create account (signup enabled)
      ‚Ä¢ Import recipes from URLs
      ‚Ä¢ Plan meals and generate shopping lists
      ‚Ä¢ Share recipes with family
      
      Features:
      ‚úÖ Recipe import from websites
      ‚úÖ Meal planning calendar
      ‚úÖ Shopping list generation
      ‚úÖ Nutritional information
      ‚úÖ Recipe scaling and conversion
      
      üìä DATABASE INFORMATION:
      =======================
      ‚Ä¢ Nextcloud: MariaDB (persistent storage)
      ‚Ä¢ Immich: PostgreSQL + Redis cache
      ‚Ä¢ Mealie: SQLite (embedded)
      
      All services include:
      ‚úÖ Persistent data storage
      ‚úÖ SSL/TLS certificates
      ‚úÖ Automatic backups via persistent volumes
      
      üîß Maintenance Commands:
        kubectl get pods -n cloud-services
        kubectl get pvc -n cloud-services
        kubectl logs -n cloud-services deployment/nextcloud
        kubectl logs -n cloud-services deployment/immich-server
      
      üí° Pro Tips:
      ‚Ä¢ Set up regular backups of persistent volumes
      ‚Ä¢ Monitor disk usage - photos/videos can consume significant space
      ‚Ä¢ Configure Nextcloud cron jobs for better performance
      ‚Ä¢ Enable Immich machine learning features for enhanced search