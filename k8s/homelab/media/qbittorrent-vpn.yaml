---
apiVersion: v1
kind: Secret
metadata:
  name: airvpn-config
  namespace: media
type: Opaque
stringData:
  # AirVPN native provider - required variables only
  VPN_SERVICE_PROVIDER: "airvpn"
  VPN_TYPE: "wireguard"
  WIREGUARD_PRIVATE_KEY: "6PPILvqyKKZsrJlCuhbA8fNCNjJnXYvEgbkefn3joGM="
  WIREGUARD_PRESHARED_KEY: "wBgcWM8yENsysegPAL9/RKw4XWc93zVoYNT0Dn9pfjA="
  WIREGUARD_ADDRESSES: "10.186.123.240/32,fd7d:76ee:e68f:a993:e2ea:da21:fba4:80f9/128"
  # Optional settings to match your config
  WIREGUARD_MTU: "1320"
  FIREWALL: "on"
  DOT: "off"
  # Disable automatic port forwarding for custom provider (AirVPN handles this)
  VPN_PORT_FORWARDING: "off"
  FIREWALL_VPN_INPUT_PORTS: "23059"
  WIREGUARD_PERSISTENT_KEEPALIVE: "15"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qbittorrent-config-template
  namespace: media
data:
  qBittorrent.conf: |
    [Application]
    FileLogger\Enabled=true
    FileLogger\MaxSizeBytes=66560
    FileLogger\Path=/config/qBittorrent/data/logs

    [BitTorrent]
    Session\AddTorrentStopped=false
    Session\DefaultSavePath=/downloads
    Session\ExcludedFileNames=
    Session\Interface=tun0
    Session\InterfaceName=tun0
    Session\Port=23059
    Session\QueueingSystemEnabled=true
    Session\SSL\Port=55745
    Session\ShareLimitAction=Stop
    Session\TempPath=/downloads/temp

    [Core]
    AutoDeleteAddedTorrentFile=Never

    [Meta]
    MigrationVersion=8

    [Network]
    Cookies=@Invalid()
    Proxy\HostnameLookupEnabled=false
    Proxy\Profiles\BitTorrent=true
    Proxy\Profiles\Misc=true
    Proxy\Profiles\RSS=true

    [Preferences]
    General\Locale=en
    MailNotification\req_auth=true
    WebUI\AuthSubnetWhitelist=10.42.0.0/16
    WebUI\AuthSubnetWhitelistEnabled=true
    WebUI\Port=8080

    [RSS]
    AutoDownloader\DownloadRepacks=true
    AutoDownloader\SmartEpisodeFilter=s(\\d+)e(\\d+), (\\d+)x(\\d+), "(\\d{4}[.\\-]\\d{1,2}[.\\-]\\d{1,2})", "(\\d{1,2}[.\\-]\\d{1,2}[.\\-]\\d{4})"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qbittorrent-config
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qbittorrent-downloads
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent-vpn
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qbittorrent-vpn
  template:
    metadata:
      labels:
        app: qbittorrent-vpn
    spec:
      nodeSelector:
        node-role.home.lab/storage: "true"
      initContainers:
      # Initialize qBittorrent config with VPN interface binding
      - name: config-init
        image: busybox:latest
        command: ['sh', '-c']
        args:
        - |
          mkdir -p /config/qBittorrent/config
          if [ ! -f /config/qBittorrent/config/qBittorrent.conf ]; then
            echo "Copying initial config with VPN interface binding..."
            cp /tmp/config-template/qBittorrent.conf /config/qBittorrent/config/qBittorrent.conf
          else
            echo "Config exists, checking for VPN interface binding..."
            if ! grep -q "Session\\\\Interface=tun0" /config/qBittorrent/config/qBittorrent.conf; then
              echo "Adding VPN interface binding to existing config..."
              sed -i '/\[BitTorrent\]/a\Session\\Interface=tun0\nSession\\InterfaceName=tun0' /config/qBittorrent/config/qBittorrent.conf
            fi
          fi
        volumeMounts:
        - name: config
          mountPath: /config
        - name: config-template
          mountPath: /tmp/config-template
      containers:
      # VPN Sidecar Container
      - name: gluetun
        image: qmcgaw/gluetun:latest
        securityContext:
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
        ports:
        - containerPort: 8080
          name: qbittorrent
        - containerPort: 8888
          name: gluetun-http
        env:
        - name: VPN_SERVICE_PROVIDER
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: VPN_SERVICE_PROVIDER
        - name: VPN_TYPE
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: VPN_TYPE
        - name: WIREGUARD_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: WIREGUARD_PRIVATE_KEY
        - name: WIREGUARD_ADDRESSES
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: WIREGUARD_ADDRESSES
        - name: WIREGUARD_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: WIREGUARD_PUBLIC_KEY
        - name: WIREGUARD_PRESHARED_KEY
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: WIREGUARD_PRESHARED_KEY
        - name: WIREGUARD_ENDPOINT_IP
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: WIREGUARD_ENDPOINT_IP
        - name: WIREGUARD_ENDPOINT_PORT
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: WIREGUARD_ENDPOINT_PORT
        - name: FIREWALL_VPN_INPUT_PORTS
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: FIREWALL_VPN_INPUT_PORTS
        - name: FIREWALL
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: FIREWALL
        - name: VPN_PORT_FORWARDING
          valueFrom:
            secretKeyRef:
              name: airvpn-config
              key: VPN_PORT_FORWARDING
        - name: HEALTH_VPN_DURATION_INITIAL
          value: "30s"
        - name: HEALTH_SUCCESS_WAIT_DURATION
          value: "5s"
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "200m"

      # qBittorrent Container
      - name: qbittorrent
        image: qbittorrentofficial/qbittorrent-nox:latest
        command: ["qbittorrent-nox"]
        args: ["--webui-port=8080", "--profile=/config"]
        env:
        - name: QBT_WEBUI_PORT
          value: "8080"
        - name: QBT_TORRENTING_PORT
          value: "23059"
        - name: TZ
          value: "America/Toronto"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1"
        # Shares pod network with gluetun automatically

      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: qbittorrent-config
      - name: downloads
        persistentVolumeClaim:
          claimName: qbittorrent-downloads
      - name: config-template
        configMap:
          name: qbittorrent-config-template
      
      # Share network namespace with gluetun
      shareProcessNamespace: true
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
        - "1.1.1.1"
        - "8.8.8.8"
---
apiVersion: v1
kind: Service
metadata:
  name: qbittorrent
  namespace: media
spec:
  type: LoadBalancer
  selector:
    app: qbittorrent-vpn
  ports:
  - port: 8080
    targetPort: 8080
    name: webui
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qbittorrent
  namespace: media
  annotations:
    cert-manager.io/cluster-issuer: "ca-issuer"
    # Add basic auth for security
    traefik.ingress.kubernetes.io/router.middlewares: media-qbittorrent-auth@kubernetescrd
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - qbittorrent.home.lab
    secretName: qbittorrent-tls
  rules:
  - host: qbittorrent.home.lab
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qbittorrent
            port:
              number: 8080